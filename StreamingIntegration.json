{
  "author": "",
  "category": "Third-party",
  "extensionNamespace": "",
  "fullName": "Streaming Integration",
  "helpPath": "",
  "iconUrl": "",
  "name": "StreamingIntegration",
  "previewIconUrl": "",
  "shortDescription": "An extention to expose Twitch and Youtube APIs datas in GDevelop",
  "version": "0.0.1",
  "description": [
    "**FIRST USABLE BUILD**",
    "",
    "An extention to expose Twitch and Youtube APIs datas in GDevelop. ",
    "",
    "**STILL IN DEVELOPEMENT**",
    "",
    "24/12/23 :",
    "Currently you can only recieve Twitch and/or Youtube followers count and show it into a Text Object."
  ],
  "tags": [
    "stream",
    "twitch",
    "youtube",
    "followers"
  ],
  "authorIds": [
    "pfed0sUBHwTXQMZXkzrJFuOqPkJ2"
  ],
  "dependencies": [],
  "eventsFunctions": [
    {
      "description": "Add Twitch Credentials",
      "fullName": "Set Twitch Credentials",
      "functionType": "Action",
      "group": "Init",
      "name": "setTwitchCredentials",
      "sentence": "Twitch Credentials Client ID : _PARAM1_ ,  AccessToken : _PARAM2_ , Channel ID : _PARAM3_",
      "events": [
        {
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": [
            "globalThis.twitchClientID = new gdjs.Variable();",
            "globalThis.twitchClientID.setString(eventsFunctionContext.getArgument(\"clientID\"));",
            "",
            "globalThis.twitchAccessToken = new gdjs.Variable();",
            "globalThis.twitchAccessToken.setString(eventsFunctionContext.getArgument(\"accessToken\"));",
            "",
            "globalThis.twitchChannelID = new gdjs.Variable();",
            "globalThis.twitchChannelID.setString(eventsFunctionContext.getArgument(\"channelID\"));",
            "",
            ""
          ],
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        }
      ],
      "parameters": [
        {
          "description": "Client ID",
          "name": "clientID",
          "type": "string"
        },
        {
          "description": "Access Token",
          "name": "accessToken",
          "type": "string"
        },
        {
          "description": "Channel ID",
          "name": "channelID",
          "type": "string"
        }
      ],
      "objectGroups": []
    },
    {
      "description": "Add Youtube Credentials",
      "fullName": "Set Youtube Credentials",
      "functionType": "Action",
      "group": "Init",
      "name": "setYoutubeCredentials",
      "sentence": "Youtube Credentials Channel ID : _PARAM1_ ,  ApiKey: _PARAM2_",
      "events": [
        {
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": [
            "globalThis.youtubeApiKey = new gdjs.Variable();",
            "globalThis.youtubeApiKey.setString(eventsFunctionContext.getArgument(\"apiKey\"));",
            "",
            "globalThis.youtubeChannelID = new gdjs.Variable();",
            "globalThis.youtubeChannelID.setString(eventsFunctionContext.getArgument(\"channelID\"));",
            "",
            ""
          ],
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        }
      ],
      "parameters": [
        {
          "description": "Client ID",
          "name": "channelID",
          "type": "string"
        },
        {
          "description": "Access Token",
          "name": "apiKey",
          "type": "string"
        }
      ],
      "objectGroups": []
    }
  ],
  "eventsBasedBehaviors": [
    {
      "description": "The the total number of followers of a specific channel.",
      "fullName": "GetTotalFollowers",
      "name": "GetTotalFollowers",
      "objectType": "TextObject::Text",
      "eventsFunctions": [
        {
          "fullName": "",
          "functionType": "Action",
          "name": "GetTotalTwitchFollowers",
          "sentence": "Show total Twitch Followers in _PARAM0_",
          "events": [
            {
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": [
                "        const display = eventsFunctionContext.getObjects(\"Object\")[0];",
                "   // Construct the API endpoint URL",
                "        const twitchApiUrl = `https://api.twitch.tv/helix/channels/followers?broadcaster_id=${twitchChannelID.getValue()}`;",
                "        // Make the API request with the Twitch API key in the headers",
                "        fetch(twitchApiUrl, {",
                "            headers: {",
                "                'Client-ID': `${twitchClientID.getValue()}`,",
                "                'Authorization': `Bearer ${twitchAccessToken.getValue()}`",
                "            }",
                "        })",
                "        .then(response => response.json())",
                "        .then(data => {",
                "            // Extract and display the number of followers",
                "            const followerCount = data.total;",
                "            console.log('Number of Followers:', followerCount);",
                "            display.setText(followerCount);",
                "        })",
                "        .catch(error => {",
                "            console.error('Error fetching Twitch followers:', error);",
                "        });"
              ],
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": true
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "TextObject::Text",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "StreamingIntegration::GetTotalFollowers",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "fullName": "",
          "functionType": "Action",
          "name": "GetTotalYoutubeFollowers",
          "sentence": "Show total Youtube Followers _PARAM0_",
          "events": [
            {
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": [
                "const display = eventsFunctionContext.getObjects(\"Object\")[0];",
                "",
                "// API endpoint for the YouTube Data API",
                "        const youtubeApiUrl = `https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${youtubeChannelID.getValue()}&key=${youtubeApiKey.getValue()}`;",
                "",
                "        fetch(youtubeApiUrl)",
                "        .then(response => response.json())",
                "        .then(data => {",
                "            // Extract and display the number of followers",
                "            const followerCount = data.items[0].statistics.subscriberCount;",
                "            console.log('Number of Followers:', followerCount);",
                "            display.setText(followerCount);",
                "            //display.toString(followerCount);",
                "            ",
                "        })",
                "        .catch(error => {",
                "            console.error('Error fetching Youtube followers:', error);",
                "        });"
              ],
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": true
            }
          ],
          "parameters": [
            {
              "description": "Object",
              "name": "Object",
              "supplementaryInformation": "TextObject::Text",
              "type": "object"
            },
            {
              "description": "Behavior",
              "name": "Behavior",
              "supplementaryInformation": "StreamingIntegration::GetTotalFollowers",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": [],
      "sharedPropertyDescriptors": []
    }
  ],
  "eventsBasedObjects": []
}